#!/usr/local/bin/cbsd
MYARG=
MYOPTARG=
MYDESC="Configure MUTT configuration for SMTP func"
CBSDMODULE="myb"
ADDHELP="

${H3_COLOR}Description${N0_COLOR}:

Manage /root/.mutt/muttrc + test

"
EXTHELP=

. ${subrdir}/tools.subr
. ${subrdir}/cbsdinit.subr
. ${subrdir}/system.subr

MUTT_CONFIG_FILE="/root/.mutt/muttrc"
MYB_SMTP_CONFIG_FILE="/usr/local/etc/smtp.conf"

SMTP_PASS=
SMTP_LOGIN=
SMTP_HOST=
SSL_FORCE_TLS=

[ -r ${MYB_SMTP_CONFIG_FILE} ] && . ${MYB_SMTP_CONFIG_FILE}

[ -z "${SMTP_LOGIN}" ] && SMTP_LOGIN="noreply@example.com"
[ -z "${SMTP_HOST}" ] && SMTP_HOST="mail.gandi.net:587"
[ -z "${SSL_FORCE_TLS}" ] && SSL_FORCE_TLS=1
[ -z "${HOST_ADMIN}" ] && HOST_ADMIN="olevole@olevole.ru"

case "${SSL_FORCE_TLS}" in
	1|[Yy][Ee][Ss])
		SSL_FORCE_TLS="yes"
		;;
	*)
		SSL_FORCE_TLS="no"
		;;
esac

[ ! -d /root/.mutt ] && ${MKDIR_CMD} /root/.mutt

done=0

while [ ${done} -ne 1 ]; do

	while [ true ]; do
		printf "${N1_COLOR}Enter SMTP login (e.g: yourname@example.comf) [${N2_COLOR}${SMTP_LOGIN}${N1_COLOR}]:${N0_COLOR} "
		read _SMTP_LOGIN
		_ret=$?
		[ ${_ret} -ne 0 ] && exit ${_ret}

		[ -z "${_SMTP_LOGIN}" ] && _SMTP_LOGIN="${SMTP_LOGIN}"

		strpos --str="${_SMTP_LOGIN}" --search="@"
		_ret=$?
		if [ ${_ret} -eq 0 ]; then
			${ECHO} "${N1_COLOR}valid form: xxx@domain"
			continue
		fi
		break
	done


	while [ true ]; do
		printf "${N1_COLOR}Enter SMTP HOST+port (e.g: mail.gandi.net:587) [${N2_COLOR}${SMTP_HOST}${N1_COLOR}]:${N0_COLOR} "
		read _SMTP_HOST
		_ret=$?
		[ ${_ret} -ne 0 ] && exit ${_ret}

		[ -z "${_SMTP_HOST}" ] && _SMTP_HOST="${SMTP_HOST}"

		strpos --str="${_SMTP_HOST}" --search=":"
		_ret=$?
		if [ ${_ret} -eq 0 ]; then
			${ECHO} "${N1_COLOR}valid form: hostname:port"
			continue
		fi
		break
	done

	while [ true ]; do
		printf "${N1_COLOR}Enter password for ${_SMTP_LOGIN} (will not be shown):${N0_COLOR} "
		oldmodes=$( ${STTY_CMD} -g )
		${STTY_CMD} -echo
		read _SMTP_PASS
		_ret=$?
		${STTY_CMD} ${oldmodes}
		[ ${_ret} -ne 0 ] && exit ${_ret}
		echo

		[ -z "${_SMTP_PASS}" ] && _SMTP_PASS="${SMTP_PASS}"
		if [ -z "${_SMTP_PASS}" ]; then
			${ECHO} "${N1_COLOR}empty password${N0_COLOR}"
			continue
		fi
		break
	done

	printf "${N1_COLOR}Force TLS ? (e.g.: '1' or 'yes') [${N2_COLOR}${SSL_FORCE_TLS}${N1_COLOR}]:${N0_COLOR} "
	read _SSL_FORCE_TLS
	_ret=$?
	[ ${_ret} -ne 0 ] && exit ${_ret}

	[ -z "${_SSL_FORCE_TLS}" ] && _SSL_FORCE_TLS="${SSL_FORCE_TLS}"

	case "${_SSL_FORCE_TLS}" in
		1|[Yy][Ee][Ss])
			_SSL_FORCE_TLS="yes"
			;;
		*)
			_SSL_FORCE_TLS="no"
			;;
	esac

	while [ true ]; do
		printf "${N1_COLOR}Myb admin email (e.g: yourname@example.comf) [${N2_COLOR}${HOST_ADMIN}${N1_COLOR}]:${N0_COLOR} "
		read _HOST_ADMIN
		_ret=$?
		[ ${_ret} -ne 0 ] && exit ${_ret}

		[ -z "${_HOST_ADMIN}" ] && _HOST_ADMIN="${HOST_ADMIN}"

		strpos --str="${_HOST_ADMIN}" --search="@"
		_ret=$?
		if [ ${_ret} -eq 0 ]; then
			${ECHO} "${N1_COLOR}valid form: xxx@domain"
			continue
		fi
		break
	done

	echo
	${ECHO} "${N1_COLOR}New settings:${N0_COLOR}"
	${ECHO} "${N1_COLOR}SMTP login: ${N2_COLOR}${_SMTP_LOGIN}${N0_COLOR}"
	${ECHO} "${N1_COLOR}SMTP host: ${N2_COLOR}${_SMTP_HOST}${N0_COLOR}"
	${ECHO} "${N1_COLOR}SMTP password: ${N2_COLOR}***${N0_COLOR}"
	${ECHO} "${N1_COLOR}SMTP force TLS: ${N2_COLOR}${_SSL_FORCE_TLS}${N0_COLOR}"
	${ECHO} "${N1_COLOR}MyB host admin email: ${N2_COLOR}${_HOST_ADMIN}${N0_COLOR}"

	if getyesno "Do you want to apply new configuration?"; then
		done=1
		break
	fi
done

${SYSRC_CMD} -qf ${MYB_SMTP_CONFIG_FILE} SMTP_LOGIN="${_SMTP_LOGIN}"
${SYSRC_CMD} -qf ${MYB_SMTP_CONFIG_FILE} SMTP_HOST="${_SMTP_HOST}"
${SYSRC_CMD} -qf ${MYB_SMTP_CONFIG_FILE} SMTP_PASS="${_SMTP_PASS}" >/dev/null 2>&1
${SYSRC_CMD} -qf ${MYB_SMTP_CONFIG_FILE} SSL_FORCE_TLS="${_SSL_FORCE_TLS}"
${SYSRC_CMD} -qf ${MYB_SMTP_CONFIG_FILE} HOST_ADMIN="${_HOST_ADMIN}"

${CAT_CMD} > ${MUTT_CONFIG_FILE} <<EOF
set smtp_url = "smtp://${_SMTP_LOGIN}@${_SMTP_HOST}/"
set smtp_pass = "${_SMTP_PASS}"
set ssl_force_tls = ${_SSL_FORCE_TLS}
set hostname="try-fcp.org"
set use_domain=yes
set hidden_host=yes
EOF

# test message via mutt verbose
CLUSTER=$( hostname -s )

${CAT_CMD} > /tmp/message.txt.$$ <<EOF

  Hello from MyBee at ${CLUSTER} !

  If you see this messagge, then the SMTP server has been configured correctly!

  Please do not reply ;-)

EOF

${ECHO} "${N2_COLOR}Send test message...${N0_COLOR}"

/usr/local/bin/mutt -e 'set record=/root/sent' -s "MyBee: ${CLUSTER}: SMTP test" -- ${_HOST_ADMIN} < /tmp/message.txt.$$
_ret=$?

if [ ${_ret} -ne 0 ]; then
	${ECHO} "${N1_COLOR}retcode: ${W1_COLOR}${_ret}${N1_COLOR}, check SMTP settings or connections${N0_COLOR}"
else
	${ECHO} "${N1_COLOR}retcode: ${H1_COLOR}${_ret}${N1_COLOR}, please check ${N2_COLOR}${_HOST_ADMIN}${N1_COLOR} mailbox (and/or SPAM folders)${N0_COLOR}"
fi

${SYSRC_CMD} -qf ${MYB_SMTP_CONFIG_FILE} SMTP_CONFIGURED="1" >/dev/null 2>&1

${RM_CMD} -f /tmp/message.txt.$$

echo "press any key to continue"
read p

exit 0
